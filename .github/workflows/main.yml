name: Multi-OS E2E Tests

on:
  workflow_dispatch:

env:
  CLUSTER_URL: ${{ secrets.CLUSTER_URL }}
  CLUSTER_TOKEN: ${{ secrets.CLUSTER_TOKEN }}

jobs:
  e2e-tests:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            name: RHEL
    runs-on: ${{ matrix.os }}
    name: E2E Tests on ${{ matrix.name || matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Go environment
      uses: actions/setup-go@v5
      with:
        go-version: '>=1.22.0'
  

    - name: Install Git (Ubuntu/RHEL)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y git

    - name: Install Git (macOS)
      if: matrix.os == 'macos-latest'
      run: brew install git

    - name: Install Git (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install git
        echo "$env:ChocolateyInstall\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Install skopeo (Ubuntu/RHEL)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y skopeo

    - name: Install skopeo (macOS)
      if: matrix.os == 'macos-latest'
      run: brew install skopeo

    - name: Install WSL and skopeo (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Enable WSL
        dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
        # Enable Virtual Machine Platform
        dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
        # Install WSL
        wsl --install
        # Update and install skopeo in WSL
        wsl -u root apt-get update
        wsl -u root apt-get install -y skopeo

    - name: OpenShift Client Installer
      uses: redhat-actions/oc-installer@v1
            

    # FORNOW: Display tool versions
    - name: Display tool versions
      run: |
        go version
        git --version
        oc version
        if [ "${{ matrix.os }}" != "windows-latest" ]; then
        skopeo --version
        else
        wsl skopeo --version
        fi

    - name: Log in to cluster
      run: oc login --token=${{ env.CLUSTER_TOKEN }} --server=${{ env.CLUSTER_URL }} --insecure-skip-tls-verify=true

    - name: Clone repository for SSO operator
      run: git clone https://github.com/securesign/sigstore-ocp.git

    - name: Apply Keycloak base Kustomize directory
      run: |
        cd sigstore-ocp
        oc apply --kustomize=keycloak/operator/base

    - name: Wait for Keycloak system pods to be running
      run: |
        for i in {1..30}; do
        if oc get pods -n keycloak-system | grep -E 'Running|Completed'; then
            echo "Keycloak system pods are running."
            break
        else
            echo "Waiting for Keycloak system pods to be running..."
            sleep 10  # Wait for 10 seconds before checking again
        fi
        done

    - name: Apply Keycloak resources base Kustomize directory
      run: |
        cd sigstore-ocp
        oc apply --kustomize=keycloak/resources/base


    - name: Create and apply rhtas-candidate.yaml
      run: |
        cat <<EOF > rhtas-candidate.yaml
        ---
        apiVersion: operators.coreos.com/v1alpha1
        kind: Subscription
        metadata:
          name: rhtas-operator
          namespace: openshift-operators
        spec:
          channel: candidate-v1.0
          installPlanApproval: Automatic
          name: rhtas-operator
          source: redhat-operators
          sourceNamespace: openshift-marketplace
        EOF

    - name: Export OIDC_ISSUER_URL
      run: |
        export OIDC_ISSUER_URL=https://$(oc get route keycloak -n keycloak-system | tail -n 1 | awk '{print $2}')/auth/realms/trusted-artifact-signer
        echo "OIDC_ISSUER_URL=${OIDC_ISSUER_URL}" >> $GITHUB_ENV

    - name: Create and apply securesign.yaml
      run: |
        cat <<EOF > securesign.yaml
        kind: Securesign
        apiVersion: rhtas.redhat.com/v1alpha1
        metadata:
        annotations:
          rhtas.redhat.com/metrics: 'true'
        labels:
          app.kubernetes.io/instance: securesign-sample
          app.kubernetes.io/name: securesign-sample
          app.kubernetes.io/part-of: trusted-artifact-signer
        name: securesign-sample
        namespace: trusted-artifact-signer
        spec:
        ctlog: null
        fulcio:
          certificate:
          commonName: fulcio.hostname
          organizationEmail: jdoe@redhat.com
          organizationName: Red Hat
          config:
          OIDCIssuers:
            - ClientID: trusted-artifact-signer
            Issuer: ${OIDC_ISSUER_URL}
            IssuerURL: ${OIDC_ISSUER_URL}
            Type: email
          externalAccess:
          enabled: true
          monitoring:
          enabled: true
        rekor:
          externalAccess:
          enabled: true
          monitoring:
          enabled: true
        trillian:
          database:
          create: true
        tuf:
          externalAccess:
          enabled: true
          keys:
          - name: rekor.pub
          - name: ctfe.pub
          - name: fulcio_v1.crt.pem
        EOF
        oc apply -f securesign.yaml

    - name: Wait for securesign pods to be ready
      run: |
        for i in {1..30}; do
        if oc get jobs -A | grep 'Completed'; then
            echo "Securesign pods are ready."
            break
        else
            echo "Waiting for securesign pods to be ready..."
            sleep 10  # Wait for 10 seconds before checking again
        fi
        done

    - name: Clone E2E repository
      run: git clone https://github.com/securesign/sigstore-e2e.git

    - name: Run E2E tests (Ubuntu/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        cd sigstore-e2e
        git checkout skopeo-support
        export CLI_STRATEGY=openshift
        source tas-env-variables.sh
        go test -v ./test/... --ginkgo.v

    - name: Run E2E tests (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd sigstore-e2e
        git checkout skopeo-support
        $env:CLI_STRATEGY = "openshift"
        .\tas-env-variables.ps1
        go test -v ./test/... --ginkgo.v